package controller

import (
	"context"
	"fmt"
	"getContractDeployment/helper"
	"getContractDeployment/models"

	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

func AddVulnerability(ctx context.Context, collection *mongo.Collection, vulne models.Vulnerability) error {
	helper.WriteFileExtra(fmt.Sprint(helper.GetTimeNow(), " (Vulnerability DB) New vulnerability : ", vulne.Name), "log.txt")

	_, err := collection.InsertOne(ctx, &vulne)
	if err != nil {
		helper.WriteFileExtra(fmt.Sprint(helper.GetTimeNow(), " (Vulnerability DB) (Error) ", err.Error()), "log.txt")
		return helper.MakeError(err, "(db_vulnerability) add new user")
	}
	return nil
}

func GetVulnerabilityDescription(ctx context.Context, collection *mongo.Collection, name string) (string, error){
	filter := bson.D{{"name", name}}
	var result models.Vulnerability
	err := collection.FindOne(ctx, filter).Decode(&result)

	if err != nil {
		if err == mongo.ErrNoDocuments {
			return "", nil
		}
		helper.WriteFileExtra(fmt.Sprint(helper.GetTimeNow(), " (Vulnerability DB) (Error) ", err.Error()), "log.txt")
		return "", helper.MakeError(err, "(db_vulnerability) get analysis from user")
	}

	return result.Description, nil
}